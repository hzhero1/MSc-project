1. no augmentation
-----------------------
Evaluation on test data
-----------------------
Confusion matrix:
 tensor([[471.,  12.,  17.],
        [  7., 482.,  11.],
        [ 25., 139., 336.]])

Per class evaluation: 
Classes        {'Black_Hair': 0, 'Blond_Hair': 1, 'Gray_Hair': 2}
Precision      tensor([0.9364, 0.7615, 0.9231])
Recall         tensor([0.9420, 0.9640, 0.6720])
F1 Score       tensor([0.9392, 0.8508, 0.7778])

Test Accuracy of the model: 85.93333333333334 %



2. traditional augmentation
-----------------------
Evaluation on test data
-----------------------
Confusion matrix:
 tensor([[482.,   5.,  13.],
        [ 11., 460.,  29.],
        [ 32.,  51., 417.]])

Per class evaluation: 
Classes        {'Black_Hair': 0, 'Blond_Hair': 1, 'Gray_Hair': 2}
Precision      tensor([0.9181, 0.8915, 0.9085])
Recall         tensor([0.9640, 0.9200, 0.8340])
F1 Score       tensor([0.9405, 0.9055, 0.8697])

Test Accuracy of the model: 90.6 %



3. DCGAN
-----------------------
Evaluation on test data
-----------------------
Confusion matrix:
 tensor([[454.,  13.,  33.],
        [  5., 485.,  10.],
        [  9., 144., 347.]])

Per class evaluation: 
Classes        {'Black_Hair': 0, 'Blond_Hair': 1, 'Gray_Hair': 2}
Precision      tensor([0.9701, 0.7555, 0.8897])
Recall         tensor([0.9080, 0.9700, 0.6940])
F1 Score       tensor([0.9380, 0.8494, 0.7798])

Test Accuracy of the model: 85.73333333333333 %



4.cDCGAN
-----------------------
Evaluation on test data
-----------------------
Confusion matrix:
 tensor([[490.,   2.,   8.],
        [ 16., 448.,  36.],
        [ 42.,  52., 406.]])

Per class evaluation: 
Classes        {'Black_Hair': 0, 'Blond_Hair': 1, 'Gray_Hair': 2}
Precision      tensor([0.8942, 0.8924, 0.9022])
Recall         tensor([0.9800, 0.8960, 0.8120])
F1 Score       tensor([0.9351, 0.8942, 0.8547])

Test Accuracy of the model: 89.6 %



5. CycleGan
-----------------------
Evaluation on test data
-----------------------
Confusion matrix:
 tensor([[486.,   3.,  11.],
        [ 16., 469.,  15.],
        [ 44.,  90., 366.]])

Per class evaluation: 
Classes        {'Black_Hair': 0, 'Blond_Hair': 1, 'Gray_Hair': 2}
Precision      tensor([0.8901, 0.8345, 0.9337])
Recall         tensor([0.9720, 0.9380, 0.7320])
F1 Score       tensor([0.9293, 0.8832, 0.8206])

Test Accuracy of the model: 88.06666666666666 %



6. StarGan
-----------------------
Evaluation on test data
-----------------------
Confusion matrix:
 tensor([[487.,   3.,  10.],
        [  9., 463.,  28.],
        [ 30.,  46., 424.]])

Per class evaluation: 
Classes        {'Black_Hair': 0, 'Blond_Hair': 1, 'Gray_Hair': 2}
Precision      tensor([0.9259, 0.9043, 0.9177])
Recall         tensor([0.9740, 0.9260, 0.8480])
F1 Score       tensor([0.9493, 0.9150, 0.8815])

Test Accuracy of the model: 91.6 %





